                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Sample linked list
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 3800000000000000     | 	.quad ele2
0x028:                      | ele3:
0x028: 000c000000000000     | 	.quad 0xc00
0x030: 0000000000000000     | 	.quad 0
0x038:                      | ele2:
0x038: b000000000000000     | 	.quad 0x0b0
0x040: 2800000000000000     | 	.quad ele3
                            | 
0x048: 30f71800000000000000 | main:	irmovq ele1,%rdi
                            | 	
0x052: 805c00000000000000   | 	call sum		# sum(array, 4)
0x05b: 90                   | 	ret
                            | 
                            | # long sum(long *start, long count)
                            | # start in %rdi, count in %rsi
0x05c: 30fa0000000000000000 | sum:	irmovq $0,%r10
0x066: 20a0                 | 	rrmovq %r10,%rax	     # sum = 0
0x068: 50270800000000000000 | 	mrmovq 8(%rdi),%rdx  # Get ls 
0x072: 50a70000000000000000 | 	mrmovq (%rdi),%r10   
0x07c: 60a0                 | 	addq %r10,%rax		#Adding to sum
0x07e: 6222                 | 	andq %rdx,%rdx	    	# (Check if 0 or not)
0x080: 73ac00000000000000   | 	je     test         	# Goto test
0x089: 2027                 | loop:	rrmovq %rdx,%rdi  	# Get *start
                            | 	
0x08b: 50a70000000000000000 | 	mrmovq (%rdi),%r10   
0x095: 60a0                 | 	addq %r10,%rax	
                            | 	# mrmovq (%rdi),%r10   	#Adding to sum
                            | 	# addq %r10,%rax       	# Add to sum
                            | 
0x097: 50270800000000000000 | 	mrmovq 8(%rdi),%rdx 	# Get ls
0x0a1: 6222                 | 	andq %rdx,%rdx	     	# (Check if 0 or not)
0x0a3: 748900000000000000   | 	jne loop
0x0ac: 90                   | test:	ret                  # Return
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:

# Execution begins at address 0 
	.pos 0 
	irmovq stack, %rsp  	# Set up stack pointer  
	call main		# Execute main program
	halt			# Terminate program 

.align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:	irmovq src,%rdi
	irmovq dest,%rsi
	irmovq $3,%rdx
	xorq %rax,%rax		# make rax=0
	call copy		# rsum(array, 4)
	ret

/* $begin copy-ys */
# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
	
copy:	irmovq $-1, %r10
	andq %rdx,%rdx
	je return
loop:	mrmovq (%rdi), %r9
	mrmovq (%rsi), %r12
	rmmovq %r9, (%r12) 
	
	xorq %r9,%rax
	
	irmovq $8,%r11
	addq %r11,%rdi
	addq %r11,%rsi
	
	addq %r10,%rdx
	andq %rdx,%rdx
	jne loop
return:	ret
# The stack starts here and grows to lower addresses
	.pos 0x200		
stack:	


mrmovq (%rdi), %r9
	mrmovq (%rsi), %r12
	rmmovq %r9, (%r12) 


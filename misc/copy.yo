                            | # Execution begins at address 0 
0x000:                      | 	.pos 0 
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer  
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
0x018:                      | .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: b000000000000000     | 	.quad 0x0b0
0x028: 000c000000000000     | 	.quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     | 	.quad 0x111
0x038: 2202000000000000     | 	.quad 0x222
0x040: 3303000000000000     | 	.quad 0x333
                            | 
0x048: 30f71800000000000000 | main:	irmovq src,%rdi
0x052: 30f63000000000000000 | 	irmovq dest,%rsi
0x05c: 30f20300000000000000 | 	irmovq $3,%rdx
0x066: 6300                 | 	xorq %rax,%rax		# make rax=0
0x068: 807200000000000000   | 	call copy		# rsum(array, 4)
0x071: 90                   | 	ret
                            | 
                            | /* $begin copy-ys */
                            | # long copy_block(long *src, long *dest, long len)
                            | # src in %rdi, dest in %rsi, len in %rdx
                            | 	
0x072: 30faffffffffffffffff | copy:	irmovq $-1, %r10
0x07c: 6222                 | 	andq %rdx,%rdx
0x07e: 73c200000000000000   | 	je return
0x087: 50970000000000000000 | loop:	mrmovq (%rdi), %r9
0x091: 50c60000000000000000 | 	mrmovq (%rsi), %r12
0x09b: 409c0000000000000000 | 	rmmovq %r9, (%r12)
                            | 	
0x0a5: 6390                 | 	xorq %r9,%rax
                            | 	
0x0a7: 30fb0800000000000000 | 	irmovq $8,%r11
0x0b1: 60b7                 | 	addq %r11,%rdi
0x0b3: 60b6                 | 	addq %r11,%rsi
                            | 	
0x0b5: 60a2                 | 	addq %r10,%rdx
0x0b7: 6222                 | 	andq %rdx,%rdx
0x0b9: 748700000000000000   | 	jne loop
0x0c2: 90                   | return:	ret
                            | # The stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200		
0x200:                      | stack:	 
                            | 

# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

# Sample linked list
.align 8
ele1:
	.quad 0x00a
	.quad ele2
ele3:
	.quad 0xc00
	.quad 0
ele2:
	.quad 0x0b0
	.quad ele3

main:	irmovq ele1,%rdi
	
	call sum		# sum(array, 4)
	ret

# long sum(long *start, long count)
# start in %rdi, count in %rsi
sum:	irmovq $0,%r10
	rrmovq %r10,%rax	     # sum = 0
	mrmovq 8(%rdi),%rdx  	# Get ls 
	mrmovq (%rdi),%r10   
	addq %r10,%rax		#Adding to sum
	andq %rdx,%rdx	    	# (Check if 0 or not)
	je     test         	# Goto test
loop:	rrmovq %rdx,%rdi  	# Get *start
	
	mrmovq (%rdi),%r10   
	addq %r10,%rax	

	mrmovq 8(%rdi),%rdx 	# Get ls
	andq %rdx,%rdx	     	# (Check if 0 or not)
	jne loop
test:	ret                  # Return

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:

# Execution begins at address 0 
	.pos 0 
	irmovq stack, %rsp  	# Set up stack pointer  
	call main		# Execute main program
	halt			# Terminate program 

# Sample linked list
	.align 8
ele1:
	.quad 0x00a
	.quad ele2
ele3:
	.quad 0xc00
	.quad 0
ele2:
	.quad 0x0b0
	.quad ele3

main:	irmovq ele1,%rdi
	xorq %rax,%rax		# make rax=0
	call rsum		# rsum(array, 4)
	ret

/* $begin rsum-ys */
# long rsum(long *start)
# start in %rdi, count in %rsi
	
rsum:	mrmovq (%rdi),%r9  	# Add to rax
	addq %r9,%rax
	# irmovqq 0,%rax	# Set return value to 0
	mrmovq 8(%rdi),%rdx
	andq %rdx,%rdx
	je     return		# If next == 0, return 0
			
	rrmovq %rdx,%rdi
	call rsum
	# addq %rbx,%rax          # Add *start to sum

return:	ret
# The stack starts here and grows to lower addresses
	.pos 0x200		
stack:	 


                            | # Execution begins at address 0 
0x000:                      | 	.pos 0 
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer  
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Sample linked list
0x018:                      | 	.align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 3800000000000000     | 	.quad ele2
0x028:                      | ele3:
0x028: 000c000000000000     | 	.quad 0xc00
0x030: 0000000000000000     | 	.quad 0
0x038:                      | ele2:
0x038: b000000000000000     | 	.quad 0x0b0
0x040: 2800000000000000     | 	.quad ele3
                            | 
0x048: 30f71800000000000000 | main:	irmovq ele1,%rdi
0x052: 6300                 | 	xorq %rax,%rax		# make rax=0
0x054: 805e00000000000000   | 	call rsum		# rsum(array, 4)
0x05d: 90                   | 	ret
                            | 
                            | /* $begin rsum-ys */
                            | # long rsum(long *start)
                            | # start in %rdi, count in %rsi
                            | 	
0x05e: 50970000000000000000 | rsum:	mrmovq (%rdi),%r9  	# Add to rax
0x068: 6090                 | 	addq %r9,%rax
                            | 	# irmovqq 0,%rax	# Set return value to 0
0x06a: 50270800000000000000 | 	mrmovq 8(%rdi),%rdx
0x074: 6222                 | 	andq %rdx,%rdx
0x076: 738a00000000000000   | 	je     return		# If next == 0, return 0
                            | 			
0x07f: 2027                 | 	rrmovq %rdx,%rdi
0x081: 805e00000000000000   | 	call rsum
                            | 	# addq %rbx,%rax          # Add *start to sum
                            | 
0x08a: 90                   | return:	ret
                            | # The stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200		
0x200:                      | stack:	 
                            | 
